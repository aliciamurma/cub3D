https://github-com.translate.goog/365kim/raycasting_tutorial/blob/master/3_untextured_raycaster.md?_x_tr_sl=ko&_x_tr_tl=en&_x_tr_hl=es&_x_tr_pto=wapp

Ponemos FOV = 66.8° para jugadores en primera persona
La diferencia de tiempo entre time y oldTime se usará para determinar la distancia recorrida cuando se presiona cierta tecla (para moverse a una velocidad constante sin importar cuánto se tarde en calcular un cuadro) y para medir los FPS.

CAMERA_X - sirve para calcular la dirección del rayo
Si el valor x de la declaración for es 0 (si el borde izquierdo de la pantalla) cameraX = -1
Si el valor x de la instrucción for es w/2 (centro de la pantalla) cameraX = 0
Si el valor x de la declaración for es w (en el extremo derecho de la pantalla) cameraX = 1




MLX A USAR
https://qst0.github.io/ft_libgfx/man_mlx_new_image.html
void *
mlx_new_image ( void *mlx_ptr, int width, int height );

char *
mlx_get_data_addr ( void *img_ptr, int *bits_per_pixel, int *size_line, int *endian );
returns information about the created image, allowing a user to modify it later

int
mlx_put_image_to_window ( void *mlx_ptr, void *win_ptr, void *img_ptr, int x, int y );

int
mlx_destroy_image ( void *mlx_ptr, void *img_ptr );

